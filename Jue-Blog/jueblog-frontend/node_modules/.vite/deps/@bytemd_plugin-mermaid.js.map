{
  "version": 3,
  "sources": ["../../@bytemd/plugin-mermaid/dist/index.mjs"],
  "sourcesContent": ["const icons = {\n  ChartGraph: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 48 48\"><path stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M17 6h14v9H17zM6 33h14v9H6zM28 33h14v9H28z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"4\" d=\"M24 16v8M13 33v-9h22v9\"/></svg>'\n};\nconst er = \"Entity relationship diagram\";\nconst flowchart = \"Flow chart\";\nconst gantt = \"Gantt chart\";\nconst mermaid$1 = \"Mermaid diagrams\";\nconst mindmap = \"Mindmaps\";\nconst pie = \"Pie chart\";\nconst sequence = \"Sequence diagram\";\nconst state = \"State diagram\";\nconst timeline = \"Timeline\";\nconst uj = \"User journey diagram\";\nconst en = {\n  \"class\": \"Class diagram\",\n  er,\n  flowchart,\n  gantt,\n  mermaid: mermaid$1,\n  mindmap,\n  pie,\n  sequence,\n  state,\n  timeline,\n  uj\n};\nfunction mermaid({\n  locale: _locale,\n  ...mermaidConfig\n} = {}) {\n  const locale = { ...en, ..._locale };\n  let m;\n  const actionItems = [\n    {\n      title: locale.flowchart,\n      code: `graph TD\nStart --> Stop`\n    },\n    {\n      title: locale.sequence,\n      code: `sequenceDiagram\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!`\n    },\n    {\n      title: locale.class,\n      code: `classDiagram\nAnimal <|-- Duck\nAnimal <|-- Fish\nAnimal <|-- Zebra\nAnimal : +int age\nAnimal : +String gender\nAnimal: +isMammal()\nAnimal: +mate()\nclass Duck{\n+String beakColor\n+swim()\n+quack()\n}\nclass Fish{\n-int sizeInFeet\n-canEat()\n}\nclass Zebra{\n+bool is_wild\n+run()\n}`\n    },\n    {\n      title: locale.state,\n      code: `stateDiagram-v2\n[*] --> Still\nStill --> [*]\n\nStill --> Moving\nMoving --> Still\nMoving --> Crash\nCrash --> [*]`\n    },\n    {\n      title: locale.er,\n      code: `erDiagram\nCUSTOMER ||--o{ ORDER : places\nORDER ||--|{ LINE-ITEM : contains\nCUSTOMER }|..|{ DELIVERY-ADDRESS : uses`\n    },\n    {\n      title: locale.uj,\n      code: `journey\ntitle My working day\nsection Go to work\nMake tea: 5: Me\nGo upstairs: 3: Me\nDo work: 1: Me, Cat\nsection Go home\nGo downstairs: 5: Me\nSit down: 5: Me`\n    },\n    {\n      title: locale.gantt,\n      code: `gantt\ntitle A Gantt Diagram\ndateFormat  YYYY-MM-DD\nsection Section\nA task           :a1, 2014-01-01, 30d\nAnother task     :after a1  , 20d\nsection Another\nTask in sec      :2014-01-12  , 12d\nanother task      : 24d`\n    },\n    {\n      title: locale.pie,\n      code: `pie title Pets adopted by volunteers\n\"Dogs\" : 386\n\"Cats\" : 85\n\"Rats\" : 15`\n    },\n    {\n      title: locale.mindmap,\n      code: `mindmap\n      Root\n          A\n            B\n            C\n    `\n    },\n    {\n      title: locale.timeline,\n      code: `timeline\n      title History of Social Media Platform\n      2002 : LinkedIn\n      2004 : Facebook\n           : Google\n      2005 : Youtube\n      2006 : Twitter\n      `\n    }\n  ];\n  return {\n    viewerEffect({ markdownBody }) {\n      (async () => {\n        const els = markdownBody.querySelectorAll(\n          \"pre>code.language-mermaid\"\n        );\n        if (els.length === 0)\n          return;\n        if (!m) {\n          m = await import(\"mermaid\").then((c) => c.default);\n          if (mermaidConfig) {\n            m.initialize(mermaidConfig);\n          }\n        }\n        els.forEach((el, i) => {\n          const pre = el.parentElement;\n          const source = el.innerText;\n          const container = document.createElement(\"div\");\n          container.classList.add(\"bytemd-mermaid\");\n          container.style.lineHeight = \"initial\";\n          pre.replaceWith(container);\n          m.render(\n            `bytemd-mermaid-${Date.now()}-${i}`,\n            source,\n            // @ts-ignore\n            container\n          ).then((svgCode) => {\n            container.innerHTML = svgCode.svg;\n          }).catch((err) => {\n          });\n        });\n      })();\n    },\n    actions: [\n      {\n        title: locale.mermaid,\n        icon: icons.ChartGraph,\n        cheatsheet: \"```mermaid\",\n        handler: {\n          type: \"dropdown\",\n          actions: actionItems.map(({ title, code }) => ({\n            title,\n            handler: {\n              type: \"action\",\n              click({ editor, appendBlock, codemirror }) {\n                const { line } = appendBlock(\"```mermaid\\n\" + code + \"\\n```\");\n                editor.setSelection(\n                  codemirror.Pos(line + 1, 0),\n                  codemirror.Pos(line + code.split(\"\\n\").length)\n                );\n                editor.focus();\n              }\n            }\n          })),\n          ...locale\n        }\n      }\n    ]\n  };\n}\nexport {\n  mermaid as default\n};\n"],
  "mappings": "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",
  "names": []
}
